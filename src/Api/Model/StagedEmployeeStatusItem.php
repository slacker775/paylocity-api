<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Paylocity\Api\Model;

class StagedEmployeeStatusItem
{
    /**
     * Adjusted seniority date. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.
     *
     * @var string|null
     */
    protected $adjustedSeniorityDate;
    /**
     * Employee status change reason. Must match Company setup.<br  /> Max length: 15.
     *
     * @var string|null
     */
    protected $changeReason;
    /**
     * Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.
     *
     * @var string|null
     */
    protected $effectiveDate;
    /**
     * Employee current work status. Common values are *A* (Active), *L* (Leave of Absence), *T* (Terminated). <br  />Max length: 20.
     *
     * @var string|null
     */
    protected $employeeStatus;
    /**
     * Employee hired date. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.
     *
     * @var string|null
     */
    protected $hireDate;
    /**
     * Indicates if employee eligible for rehire.
     *
     * @var bool|null
     */
    protected $isEligibleForRehire;

    /**
     * Adjusted seniority date. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.
     */
    public function getAdjustedSeniorityDate(): ?string
    {
        return $this->adjustedSeniorityDate;
    }

    /**
     * Adjusted seniority date. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.
     */
    public function setAdjustedSeniorityDate(?string $adjustedSeniorityDate): self
    {
        $this->adjustedSeniorityDate = $adjustedSeniorityDate;

        return $this;
    }

    /**
     * Employee status change reason. Must match Company setup.<br  /> Max length: 15.
     */
    public function getChangeReason(): ?string
    {
        return $this->changeReason;
    }

    /**
     * Employee status change reason. Must match Company setup.<br  /> Max length: 15.
     */
    public function setChangeReason(?string $changeReason): self
    {
        $this->changeReason = $changeReason;

        return $this;
    }

    /**
     * Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.
     */
    public function getEffectiveDate(): ?string
    {
        return $this->effectiveDate;
    }

    /**
     * Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.
     */
    public function setEffectiveDate(?string $effectiveDate): self
    {
        $this->effectiveDate = $effectiveDate;

        return $this;
    }

    /**
     * Employee current work status. Common values are *A* (Active), *L* (Leave of Absence), *T* (Terminated). <br  />Max length: 20.
     */
    public function getEmployeeStatus(): ?string
    {
        return $this->employeeStatus;
    }

    /**
     * Employee current work status. Common values are *A* (Active), *L* (Leave of Absence), *T* (Terminated). <br  />Max length: 20.
     */
    public function setEmployeeStatus(?string $employeeStatus): self
    {
        $this->employeeStatus = $employeeStatus;

        return $this;
    }

    /**
     * Employee hired date. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.
     */
    public function getHireDate(): ?string
    {
        return $this->hireDate;
    }

    /**
     * Employee hired date. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.
     */
    public function setHireDate(?string $hireDate): self
    {
        $this->hireDate = $hireDate;

        return $this;
    }

    /**
     * Indicates if employee eligible for rehire.
     */
    public function getIsEligibleForRehire(): ?bool
    {
        return $this->isEligibleForRehire;
    }

    /**
     * Indicates if employee eligible for rehire.
     */
    public function setIsEligibleForRehire(?bool $isEligibleForRehire): self
    {
        $this->isEligibleForRehire = $isEligibleForRehire;

        return $this;
    }
}
