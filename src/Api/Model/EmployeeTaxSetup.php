<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Paylocity\Api\Model;

class EmployeeTaxSetup
{
    /**
     * Notes for FITW exemption.<br  /> Max length: 250.
     *
     * @var string|null
     */
    protected $fitwExemptNotes;
    /**
     * Reason code for FITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30.
     *
     * @var string|null
     */
    protected $fitwExemptReason;
    /**
     * Notes for FUTA exemption.<br  /> Max length: 250.
     *
     * @var string|null
     */
    protected $futaExemptNotes;
    /**
     * Reason code for FUTA exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max length: 30.
     *
     * @var string|null
     */
    protected $futaExemptReason;
    /**
     * Indicates if employee in agriculture or farming.
     *
     * @var bool
     */
    protected $isEmployee943;
    /**
     * Indicates if employee is eligible for pension.
     *
     * @var bool
     */
    protected $isPension;
    /**
     * Indicates if employee is statutory.
     *
     * @var bool
     */
    protected $isStatutory;
    /**
     * Notes for Medicare exemption.<br  /> Max length: 250.
     *
     * @var string|null
     */
    protected $medExemptNotes;
    /**
     * Reason code for Medicare exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max length: 30.
     *
     * @var string|null
     */
    protected $medExemptReason;
    /**
     * Notes for SITW exemption.<br  /> Max length: 250.
     *
     * @var string|null
     */
    protected $sitwExemptNotes;
    /**
     * Reason code for SITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30.
     *
     * @var string|null
     */
    protected $sitwExemptReason;
    /**
     * Notes for Social Security exemption.<br  /> Max length: 250.
     *
     * @var string|null
     */
    protected $ssExemptNotes;
    /**
     * Reason code for Social Security exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30.
     *
     * @var string|null
     */
    protected $ssExemptReason;
    /**
     * Notes for SUI exemption.<br  /> Max length: 250.
     *
     * @var string|null
     */
    protected $suiExemptNotes;
    /**
     * Reason code for SUI exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30.
     *
     * @var string|null
     */
    protected $suiExemptReason;
    /**
     * Employee SUI (State Unemployment Insurance) state. <br  />Max length: 2.
     *
     * @var string|null
     */
    protected $suiState;
    /**
     * Employee 1099R distribution code. Common values are *7* (Normal Distribution), *F* (Charitable Gift Annuity). <br  />Max length: 1.
     *
     * @var string|null
     */
    protected $taxDistributionCode1099R;
    /**
     * Employee tax form for reporting income. Valid values are *W2, 1099M, 1099R*. Default is W2. <br  />Max length: 15.
     *
     * @var string|null
     */
    protected $taxForm;

    /**
     * Notes for FITW exemption.<br  /> Max length: 250.
     */
    public function getFitwExemptNotes(): ?string
    {
        return $this->fitwExemptNotes;
    }

    /**
     * Notes for FITW exemption.<br  /> Max length: 250.
     */
    public function setFitwExemptNotes(?string $fitwExemptNotes): self
    {
        $this->fitwExemptNotes = $fitwExemptNotes;

        return $this;
    }

    /**
     * Reason code for FITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30.
     */
    public function getFitwExemptReason(): ?string
    {
        return $this->fitwExemptReason;
    }

    /**
     * Reason code for FITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30.
     */
    public function setFitwExemptReason(?string $fitwExemptReason): self
    {
        $this->fitwExemptReason = $fitwExemptReason;

        return $this;
    }

    /**
     * Notes for FUTA exemption.<br  /> Max length: 250.
     */
    public function getFutaExemptNotes(): ?string
    {
        return $this->futaExemptNotes;
    }

    /**
     * Notes for FUTA exemption.<br  /> Max length: 250.
     */
    public function setFutaExemptNotes(?string $futaExemptNotes): self
    {
        $this->futaExemptNotes = $futaExemptNotes;

        return $this;
    }

    /**
     * Reason code for FUTA exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max length: 30.
     */
    public function getFutaExemptReason(): ?string
    {
        return $this->futaExemptReason;
    }

    /**
     * Reason code for FUTA exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max length: 30.
     */
    public function setFutaExemptReason(?string $futaExemptReason): self
    {
        $this->futaExemptReason = $futaExemptReason;

        return $this;
    }

    /**
     * Indicates if employee in agriculture or farming.
     */
    public function getIsEmployee943(): bool
    {
        return $this->isEmployee943;
    }

    /**
     * Indicates if employee in agriculture or farming.
     */
    public function setIsEmployee943(bool $isEmployee943): self
    {
        $this->isEmployee943 = $isEmployee943;

        return $this;
    }

    /**
     * Indicates if employee is eligible for pension.
     */
    public function getIsPension(): bool
    {
        return $this->isPension;
    }

    /**
     * Indicates if employee is eligible for pension.
     */
    public function setIsPension(bool $isPension): self
    {
        $this->isPension = $isPension;

        return $this;
    }

    /**
     * Indicates if employee is statutory.
     */
    public function getIsStatutory(): bool
    {
        return $this->isStatutory;
    }

    /**
     * Indicates if employee is statutory.
     */
    public function setIsStatutory(bool $isStatutory): self
    {
        $this->isStatutory = $isStatutory;

        return $this;
    }

    /**
     * Notes for Medicare exemption.<br  /> Max length: 250.
     */
    public function getMedExemptNotes(): ?string
    {
        return $this->medExemptNotes;
    }

    /**
     * Notes for Medicare exemption.<br  /> Max length: 250.
     */
    public function setMedExemptNotes(?string $medExemptNotes): self
    {
        $this->medExemptNotes = $medExemptNotes;

        return $this;
    }

    /**
     * Reason code for Medicare exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max length: 30.
     */
    public function getMedExemptReason(): ?string
    {
        return $this->medExemptReason;
    }

    /**
     * Reason code for Medicare exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max length: 30.
     */
    public function setMedExemptReason(?string $medExemptReason): self
    {
        $this->medExemptReason = $medExemptReason;

        return $this;
    }

    /**
     * Notes for SITW exemption.<br  /> Max length: 250.
     */
    public function getSitwExemptNotes(): ?string
    {
        return $this->sitwExemptNotes;
    }

    /**
     * Notes for SITW exemption.<br  /> Max length: 250.
     */
    public function setSitwExemptNotes(?string $sitwExemptNotes): self
    {
        $this->sitwExemptNotes = $sitwExemptNotes;

        return $this;
    }

    /**
     * Reason code for SITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30.
     */
    public function getSitwExemptReason(): ?string
    {
        return $this->sitwExemptReason;
    }

    /**
     * Reason code for SITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30.
     */
    public function setSitwExemptReason(?string $sitwExemptReason): self
    {
        $this->sitwExemptReason = $sitwExemptReason;

        return $this;
    }

    /**
     * Notes for Social Security exemption.<br  /> Max length: 250.
     */
    public function getSsExemptNotes(): ?string
    {
        return $this->ssExemptNotes;
    }

    /**
     * Notes for Social Security exemption.<br  /> Max length: 250.
     */
    public function setSsExemptNotes(?string $ssExemptNotes): self
    {
        $this->ssExemptNotes = $ssExemptNotes;

        return $this;
    }

    /**
     * Reason code for Social Security exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30.
     */
    public function getSsExemptReason(): ?string
    {
        return $this->ssExemptReason;
    }

    /**
     * Reason code for Social Security exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30.
     */
    public function setSsExemptReason(?string $ssExemptReason): self
    {
        $this->ssExemptReason = $ssExemptReason;

        return $this;
    }

    /**
     * Notes for SUI exemption.<br  /> Max length: 250.
     */
    public function getSuiExemptNotes(): ?string
    {
        return $this->suiExemptNotes;
    }

    /**
     * Notes for SUI exemption.<br  /> Max length: 250.
     */
    public function setSuiExemptNotes(?string $suiExemptNotes): self
    {
        $this->suiExemptNotes = $suiExemptNotes;

        return $this;
    }

    /**
     * Reason code for SUI exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30.
     */
    public function getSuiExemptReason(): ?string
    {
        return $this->suiExemptReason;
    }

    /**
     * Reason code for SUI exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30.
     */
    public function setSuiExemptReason(?string $suiExemptReason): self
    {
        $this->suiExemptReason = $suiExemptReason;

        return $this;
    }

    /**
     * Employee SUI (State Unemployment Insurance) state. <br  />Max length: 2.
     */
    public function getSuiState(): ?string
    {
        return $this->suiState;
    }

    /**
     * Employee SUI (State Unemployment Insurance) state. <br  />Max length: 2.
     */
    public function setSuiState(?string $suiState): self
    {
        $this->suiState = $suiState;

        return $this;
    }

    /**
     * Employee 1099R distribution code. Common values are *7* (Normal Distribution), *F* (Charitable Gift Annuity). <br  />Max length: 1.
     */
    public function getTaxDistributionCode1099R(): ?string
    {
        return $this->taxDistributionCode1099R;
    }

    /**
     * Employee 1099R distribution code. Common values are *7* (Normal Distribution), *F* (Charitable Gift Annuity). <br  />Max length: 1.
     */
    public function setTaxDistributionCode1099R(?string $taxDistributionCode1099R): self
    {
        $this->taxDistributionCode1099R = $taxDistributionCode1099R;

        return $this;
    }

    /**
     * Employee tax form for reporting income. Valid values are *W2, 1099M, 1099R*. Default is W2. <br  />Max length: 15.
     */
    public function getTaxForm(): ?string
    {
        return $this->taxForm;
    }

    /**
     * Employee tax form for reporting income. Valid values are *W2, 1099M, 1099R*. Default is W2. <br  />Max length: 15.
     */
    public function setTaxForm(?string $taxForm): self
    {
        $this->taxForm = $taxForm;

        return $this;
    }
}
