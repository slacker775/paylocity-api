<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Paylocity\Api\Model;

class NonPrimaryStateTax
{
    /**
     * State tax code.<br  /> Max length: 50.
     *
     * @var float|null
     */
    protected $amount;
    /**
     * State tax exemptions value.<br  />Decimal (12,2).
     *
     * @var float|null
     */
    protected $exemptions;
    /**
     * State tax exemptions 2 value.<br  />Decimal (12,2).
     *
     * @var float|null
     */
    protected $exemptions2;
    /**
     * Employee state tax filing status. Common values are *S* (Single), *M* (Married).<br  />Max length: 50.
     *
     * @var string|null
     */
    protected $filingStatus;
    /**
     * State Tax percentage. <br  />Decimal (12,2).
     *
     * @var float|null
     */
    protected $percentage;
    /**
     * Non-primary state tax reciprocity code.<br  /> Max length: 50.
     *
     * @var string|null
     */
    protected $reciprocityCode;
    /**
     * Supplemental check calculation code. Common values are *Blocked* (Taxes blocked on Supplemental checks), *Supp* (Use supplemental Tax Rate-Code). <br  />Max length: 10.
     *
     * @var string|null
     */
    protected $specialCheckCalc;
    /**
     * Tax calculation code. Common values are *F* (Flat), *P* (Percentage), *FDFP* (Flat Dollar Amount plus Fixed Percentage). <br  />Max length: 10.
     *
     * @var string|null
     */
    protected $taxCalculationCode;
    /**
     * State tax code.<br  /> Max length: 50.
     *
     * @var string|null
     */
    protected $taxCode;

    /**
     * State tax code.<br  /> Max length: 50.
     */
    public function getAmount(): ?float
    {
        return $this->amount;
    }

    /**
     * State tax code.<br  /> Max length: 50.
     */
    public function setAmount(?float $amount): self
    {
        $this->amount = $amount;

        return $this;
    }

    /**
     * State tax exemptions value.<br  />Decimal (12,2).
     */
    public function getExemptions(): ?float
    {
        return $this->exemptions;
    }

    /**
     * State tax exemptions value.<br  />Decimal (12,2).
     */
    public function setExemptions(?float $exemptions): self
    {
        $this->exemptions = $exemptions;

        return $this;
    }

    /**
     * State tax exemptions 2 value.<br  />Decimal (12,2).
     */
    public function getExemptions2(): ?float
    {
        return $this->exemptions2;
    }

    /**
     * State tax exemptions 2 value.<br  />Decimal (12,2).
     */
    public function setExemptions2(?float $exemptions2): self
    {
        $this->exemptions2 = $exemptions2;

        return $this;
    }

    /**
     * Employee state tax filing status. Common values are *S* (Single), *M* (Married).<br  />Max length: 50.
     */
    public function getFilingStatus(): ?string
    {
        return $this->filingStatus;
    }

    /**
     * Employee state tax filing status. Common values are *S* (Single), *M* (Married).<br  />Max length: 50.
     */
    public function setFilingStatus(?string $filingStatus): self
    {
        $this->filingStatus = $filingStatus;

        return $this;
    }

    /**
     * State Tax percentage. <br  />Decimal (12,2).
     */
    public function getPercentage(): ?float
    {
        return $this->percentage;
    }

    /**
     * State Tax percentage. <br  />Decimal (12,2).
     */
    public function setPercentage(?float $percentage): self
    {
        $this->percentage = $percentage;

        return $this;
    }

    /**
     * Non-primary state tax reciprocity code.<br  /> Max length: 50.
     */
    public function getReciprocityCode(): ?string
    {
        return $this->reciprocityCode;
    }

    /**
     * Non-primary state tax reciprocity code.<br  /> Max length: 50.
     */
    public function setReciprocityCode(?string $reciprocityCode): self
    {
        $this->reciprocityCode = $reciprocityCode;

        return $this;
    }

    /**
     * Supplemental check calculation code. Common values are *Blocked* (Taxes blocked on Supplemental checks), *Supp* (Use supplemental Tax Rate-Code). <br  />Max length: 10.
     */
    public function getSpecialCheckCalc(): ?string
    {
        return $this->specialCheckCalc;
    }

    /**
     * Supplemental check calculation code. Common values are *Blocked* (Taxes blocked on Supplemental checks), *Supp* (Use supplemental Tax Rate-Code). <br  />Max length: 10.
     */
    public function setSpecialCheckCalc(?string $specialCheckCalc): self
    {
        $this->specialCheckCalc = $specialCheckCalc;

        return $this;
    }

    /**
     * Tax calculation code. Common values are *F* (Flat), *P* (Percentage), *FDFP* (Flat Dollar Amount plus Fixed Percentage). <br  />Max length: 10.
     */
    public function getTaxCalculationCode(): ?string
    {
        return $this->taxCalculationCode;
    }

    /**
     * Tax calculation code. Common values are *F* (Flat), *P* (Percentage), *FDFP* (Flat Dollar Amount plus Fixed Percentage). <br  />Max length: 10.
     */
    public function setTaxCalculationCode(?string $taxCalculationCode): self
    {
        $this->taxCalculationCode = $taxCalculationCode;

        return $this;
    }

    /**
     * State tax code.<br  /> Max length: 50.
     */
    public function getTaxCode(): ?string
    {
        return $this->taxCode;
    }

    /**
     * State tax code.<br  /> Max length: 50.
     */
    public function setTaxCode(?string $taxCode): self
    {
        $this->taxCode = $taxCode;

        return $this;
    }
}
